class(net2)
net2
# Check out the node options (starting with 'vertex.')
# and the edge options # (starting with 'edge.').
# A list of options is also included in your handout.
?igraph.plotting
# Plot with curved edges (edge.curved=.1) and reduce arrow size:
plot(net, edge.arrow.size=.4, edge.curved=.1)
# Set node color to orange and the border color to hex #555555
# Replace the vertex label with the node names stored in "media"
plot(net, edge.arrow.size=.2, edge.curved=0,
vertex.color="orange", vertex.frame.color="#555555",
vertex.label=V(net)$media, vertex.label.color="black",
vertex.label.cex=.7)
# Generate colors based on media type:
colrs <- c("gray50", "tomato", "gold")
V(net)$media.type
V(net)$color <- colrs[V(net)$media.type]
class(net)
View(links)
install.packages("sde")
install.packages("rugarch")
View(links2)
seq(0.02,by=0.05,length=10)
c(seq(0.02,by=0.05,length=10),seq(0.5,by=0.2,length=15))
install.packages("locpol", lib="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
x=seq(0,0.01,2)
x
x=seq(0,2,0.01)
x
y=sin(x)
y
df=data.frame(Ivp=y,IvpSTD=x)
IVsurf=locpol(Ivp~IvpSTD,data=df,bw=0.02,xevalLen=length(x))
library(locpol, lib.loc = "/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
IVsurf=locpol(Ivp~IvpSTD,data=df,bw=0.02,xevalLen=length(x))
IVsurf$lpFit
IVsurf$mf
View(df)
IVsurf$lpFit
IVsurf$data
IVsurf$mf
IVsurf$weig
IVsurf$xeval
IVsurf$bw
IVsurf$kernel()
IVsurf$kernel
IVsurf$residuals
x=seq(0,4,0.01)
y=sin(x)
df=data.frame(lvpSTD=x,lvp=y)
IVsurf=locpol(Ivp~IvpSTD,data=df,bw=0.01,xevalLen=length(x))
df=data.frame(IvpSTD=x,Ivp=y)
IVsurf=locpol(Ivp~IvpSTD,data=df,bw=0.01,xevalLen=length(x))
IVsurf=locpol(Ivp~IvpSTD,data=df,bw=0.02,xevalLen=length(x))
IVsurf$residuals
IVsurf$deg
r_t_s<-log(sp500['2010/2019'][,3])-log(sp500['2010/2019'][,1])
library(dccmidas)
require(xts)
r_t_s<-log(sp500['2010/2019'][,3])-log(sp500['2010/2019'][,1])
r_t_n<-log(nasdaq['2010/2019'][,3])-log(nasdaq['2010/2019'][,1])
r_t_f<-log(ftse100['2010/2019'][,3])-log(ftse100['2010/2019'][,1])
db_m<-merge.xts(r_t_s,r_t_d,r_t_f,r_t_n)
db_m<-merge.xts(r_t_s,r_t_n,r_t_f)
db_m<-merge.xts(r_t_s,r_t_n,r_t_f)
db_m<-db_m[complete.cases(db_m),]
colnames(db_m)<-c("S&P500","NASDAQ","FTSE100")
# list of returns
r_t<-list(db_m[,1],db_m[,2],db_m[,3])
# estimation
K_c<-144
N_c<-36
cdcc_est<-dcc_fit(r_t,univ_model="sGARCH",distribution="norm",
corr_model="DCCMIDAS",N_c=N_c,K_c=K_c)
cov_eval(cdcc_est$H_t,r_t=r_t)[(K_c+1):dim(cdcc_est$H_t)[3]]
dim(cdcc_est$H_t)
cdcc_est$assets
cdcc_est$model
cdcc_est$est_univ_model
cdcc_est$corr_coef_mat
cdcc_est$mult_model
cdcc_est$obs
cdcc_est$period
cdcc_est$H_t
cdcc_est$R_t
cdcc_est$R_t_bar
cdcc_est$est_time
cdcc_est$Days
cdcc_est$llk
# open to close daily log-returns
r_t_s<-log(sp500['2005/2008'][,3])-log(sp500['2005/2008'][,1])
r_t_n<-log(nasdaq['2005/2008'][,3])-log(nasdaq['2005/2008'][,1])
r_t_f<-log(ftse100['2005/2008'][,3])-log(ftse100['2005/2008'][,1])
db_m<-merge.xts(r_t_s,r_t_n,r_t_f)
db_m<-db_m[complete.cases(db_m),]
colnames(db_m)<-c("S&P500","NASDAQ","FTSE100")
# list of returns
r_t<-list(db_m[,1],db_m[,2],db_m[,3])
# MV transformation (same MV for all the stocks)
require(rumidas)
indpro
?mv_into_mat
diff(indpro)
indpro
mv_m<-mv_into_mat(r_t[[1]],diff(indpro),K=12,"monthly")
mv_m
# list of MV
MV<-list(mv_m,mv_m,mv_m)
# estimation
K_c<-144
N_c<-36
dccmidas_est<-dcc_fit(r_t,univ_model="GM_noskew",distribution="norm",
MV=MV,K=12,corr_model="DCCMIDAS",N_c=N_c,K_c=K_c)
dccmidas_est
summary.dccmidas(dccmidas_est)
sample(1:25,25,replace=TRUE)
matrix(sample(1:25,25,replace=TRUE),ncol=5)
##### Example of Det ######
x<-matrix(sample(1:25,25,replace=TRUE),ncol=5)
Det(x)
data(ftse100)
##### Example of plot_dccmidas #####
require(xts)
# open to close daily log-returns
r_t_s<-log(sp500['2010/2019'][,3])-log(sp500['2010/2019'][,1])
r_t_n<-log(nasdaq['2010/2019'][,3])-log(nasdaq['2010/2019'][,1])
##### Example of plot_dccmidas #####
require(xts)
# open to close daily log-returns
r_t_s<-log(sp500['2010/2019'][,3])-log(sp500['2010/2019'][,1])
sp500['2010/2019']
##### Example of plot_dccmidas #####
require(xts)
# open to close daily log-returns
r_t_s<-log(sp500['2010/2019'][,3])-log(sp500['2010/2019'][,1])
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(zoo)
library(dplyr)
theme_set(theme_bw() +
theme(text = element_text(size=15),
axis.line = element_line(colour = "black"),
# panel.border = element_blank(),
aspect.ratio = 1,
legend.title=element_blank()
))
ttm = 5
###### ######
setwd("~/同步空间/Pricing_Kernel/EPK/BTC option return/BTC_option_return_2_0_2_tau5_untilTTM/")
new_dir = "S0602_trading_result_by_continuous_m/"
dir.create(paste0(new_dir), showWarnings = FALSE)
###### Trading strategies by m ######
# f=1
files = tibble(weight = c("EW","QW","VW"))
trading_type_set = tibble(type = c("Long","Short"))
for (f in 1:nrow(files)){
####### Long strategies #######
t=1
trading_type = trading_type_set$type[t]
longCall_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Callsimple_by_M_",
files$weight[f],".csv"))
copy <- longCall_by_m %>%
mutate(Cluster = 3)
longCall_by_m <- rbind(longCall_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longCall_by_m = longCall_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Call simple"))
longPut_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Putsimple_by_M_",
files$weight[f],".csv"))
copy <- longPut_by_m %>%
mutate(Cluster = 3)
longPut_by_m <- rbind(longPut_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longPut_by_m = longPut_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Put simple"))
longStraddle_by_m = read_csv(paste0("S03_trading_returns/simple_",trading_type,"Straddle_by_M_",
files$weight[f],".csv"))
copy <- longStraddle_by_m %>%
mutate(Cluster = 3)
longStraddle_by_m <- rbind(longStraddle_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longStraddle_by_m = longStraddle_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," straddle"))
## combine all strategies for plotting
dat_by_m = bind_rows(longCall_by_m,longPut_by_m) %>%
bind_rows(longStraddle_by_m) %>%
mutate(logreturn = log(Moneyness_t)) %>%
mutate(simplereturn = exp(logreturn)-1)
# Base plot
by_m_plt_long_3 = ggplot(data = subset(dat_by_m, Cluster %in% c("Overall")), aes(x = simplereturn, y = mean_return, group = Cluster, color = Cluster)) +
facet_wrap(~ strategy, nrow = 1) +
scale_color_manual(values = c("Cluster0" = "blue", "Cluster1" = "red", "Overall" = "black")) +
theme_minimal() +
labs(title = "", x = "Simple return (K-S)/S", y = "Mean Return (%)")
# Adding points only for Cluster0 and Cluster1
by_m_plt_long_3 = by_m_plt_long_3 +
geom_point(data = subset(dat_by_m, Cluster %in% c("Overall")),
alpha = 0.8, size = 1.5, shape = 16)
# Adding smooth lines for Cluster0, Cluster1, and Overall
# by_m_plt_long_3 = by_m_plt_long_3 +
#   geom_smooth(method = "loess", span = 2, se = FALSE, linewidth = 2)
by_m_plt_long_3 = annotate_figure(by_m_plt_long_3,
top = text_grob(paste0("Simple option until maturity returns, tau = ",ttm),
size = 30, face = "bold"))
by_m_plt_long_3
ggsave(filename = paste0(new_dir,trading_type,"simple_by_m_",files$weight[f],".png"), plot = by_m_plt_long_3, bg = "transparent", width = 10, height = 5, dpi = 300)
}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(zoo)
library(dplyr)
theme_set(theme_bw() +
theme(text = element_text(size=15),
axis.line = element_line(colour = "black"),
# panel.border = element_blank(),
aspect.ratio = 1,
legend.title=element_blank()
))
ttm = 9
###### ######
setwd("~/同步空间/Pricing_Kernel/EPK/BTC option return/BTC_option_return_2_1_2_tau9_untilTTM/")
new_dir = "S0602_trading_result_by_continuous_m/"
dir.create(paste0(new_dir), showWarnings = FALSE)
###### Trading strategies by m ######
# f=1
files = tibble(weight = c("EW","QW","VW"))
trading_type_set = tibble(type = c("Long","Short"))
for (f in 1:nrow(files)){
####### Long strategies #######
t=1
trading_type = trading_type_set$type[t]
longCall_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Callsimple_by_M_",
files$weight[f],".csv"))
copy <- longCall_by_m %>%
mutate(Cluster = 3)
longCall_by_m <- rbind(longCall_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longCall_by_m = longCall_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Call simple"))
longPut_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Putsimple_by_M_",
files$weight[f],".csv"))
copy <- longPut_by_m %>%
mutate(Cluster = 3)
longPut_by_m <- rbind(longPut_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longPut_by_m = longPut_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Put simple"))
longStraddle_by_m = read_csv(paste0("S03_trading_returns/simple_",trading_type,"Straddle_by_M_",
files$weight[f],".csv"))
copy <- longStraddle_by_m %>%
mutate(Cluster = 3)
longStraddle_by_m <- rbind(longStraddle_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longStraddle_by_m = longStraddle_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," straddle"))
## combine all strategies for plotting
dat_by_m = bind_rows(longCall_by_m,longPut_by_m) %>%
bind_rows(longStraddle_by_m) %>%
mutate(logreturn = log(Moneyness_t)) %>%
mutate(simplereturn = exp(logreturn)-1)
# Base plot
by_m_plt_long_3 = ggplot(data = subset(dat_by_m, Cluster %in% c("Overall")), aes(x = simplereturn, y = mean_return, group = Cluster, color = Cluster)) +
facet_wrap(~ strategy, nrow = 1) +
scale_color_manual(values = c("Cluster0" = "blue", "Cluster1" = "red", "Overall" = "black")) +
theme_minimal() +
labs(title = "", x = "Simple return (K-S)/S", y = "Mean Return (%)")
# Adding points only for Cluster0 and Cluster1
by_m_plt_long_3 = by_m_plt_long_3 +
geom_point(data = subset(dat_by_m, Cluster %in% c("Overall")),
alpha = 0.8, size = 1.5, shape = 16)
# Adding smooth lines for Cluster0, Cluster1, and Overall
# by_m_plt_long_3 = by_m_plt_long_3 +
#   geom_smooth(method = "loess", span = 2, se = FALSE, linewidth = 2)
by_m_plt_long_3 = annotate_figure(by_m_plt_long_3,
top = text_grob(paste0("Simple option until maturity returns, tau = ",ttm),
size = 30, face = "bold"))
by_m_plt_long_3
ggsave(filename = paste0(new_dir,trading_type,"simple_by_m_",files$weight[f],".png"), plot = by_m_plt_long_3, bg = "transparent", width = 10, height = 5, dpi = 300)
}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(zoo)
library(dplyr)
theme_set(theme_bw() +
theme(text = element_text(size=15),
axis.line = element_line(colour = "black"),
# panel.border = element_blank(),
aspect.ratio = 1,
legend.title=element_blank()
))
ttm = 14
###### ######
setwd("~/同步空间/Pricing_Kernel/EPK/BTC option return/BTC_option_return_2_2_2_tau14_untilTTM/")
new_dir = "S0602_trading_result_by_continuous_m/"
dir.create(paste0(new_dir), showWarnings = FALSE)
###### Trading strategies by m ######
# f=1
files = tibble(weight = c("EW","QW","VW"))
trading_type_set = tibble(type = c("Long","Short"))
for (f in 1:nrow(files)){
####### Long strategies #######
t=1
trading_type = trading_type_set$type[t]
longCall_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Callsimple_by_M_",
files$weight[f],".csv"))
copy <- longCall_by_m %>%
mutate(Cluster = 3)
longCall_by_m <- rbind(longCall_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longCall_by_m = longCall_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Call simple"))
longPut_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Putsimple_by_M_",
files$weight[f],".csv"))
copy <- longPut_by_m %>%
mutate(Cluster = 3)
longPut_by_m <- rbind(longPut_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longPut_by_m = longPut_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Put simple"))
longStraddle_by_m = read_csv(paste0("S03_trading_returns/simple_",trading_type,"Straddle_by_M_",
files$weight[f],".csv"))
copy <- longStraddle_by_m %>%
mutate(Cluster = 3)
longStraddle_by_m <- rbind(longStraddle_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longStraddle_by_m = longStraddle_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," straddle"))
## combine all strategies for plotting
dat_by_m = bind_rows(longCall_by_m,longPut_by_m) %>%
bind_rows(longStraddle_by_m) %>%
mutate(logreturn = log(Moneyness_t)) %>%
mutate(simplereturn = exp(logreturn)-1)
# Base plot
by_m_plt_long_3 = ggplot(data = subset(dat_by_m, Cluster %in% c("Overall")), aes(x = simplereturn, y = mean_return, group = Cluster, color = Cluster)) +
facet_wrap(~ strategy, nrow = 1) +
scale_color_manual(values = c("Cluster0" = "blue", "Cluster1" = "red", "Overall" = "black")) +
theme_minimal() +
labs(title = "", x = "Simple return (K-S)/S", y = "Mean Return (%)")
# Adding points only for Cluster0 and Cluster1
by_m_plt_long_3 = by_m_plt_long_3 +
geom_point(data = subset(dat_by_m, Cluster %in% c("Overall")),
alpha = 0.8, size = 1.5, shape = 16)
# Adding smooth lines for Cluster0, Cluster1, and Overall
# by_m_plt_long_3 = by_m_plt_long_3 +
#   geom_smooth(method = "loess", span = 2, se = FALSE, linewidth = 2)
by_m_plt_long_3 = annotate_figure(by_m_plt_long_3,
top = text_grob(paste0("Simple option until maturity returns, tau = ",ttm),
size = 30, face = "bold"))
by_m_plt_long_3
ggsave(filename = paste0(new_dir,trading_type,"simple_by_m_",files$weight[f],".png"), plot = by_m_plt_long_3, bg = "transparent", width = 10, height = 5, dpi = 300)
}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(zoo)
library(dplyr)
theme_set(theme_bw() +
theme(text = element_text(size=15),
axis.line = element_line(colour = "black"),
# panel.border = element_blank(),
aspect.ratio = 1,
legend.title=element_blank()
))
ttm = 27
###### ######
setwd("~/同步空间/Pricing_Kernel/EPK/BTC option return/BTC_option_return_2_3_2_tau27_untilTTM/")
new_dir = "S0602_trading_result_by_continuous_m/"
dir.create(paste0(new_dir), showWarnings = FALSE)
###### Trading strategies by m ######
# f=1
files = tibble(weight = c("EW","QW","VW"))
trading_type_set = tibble(type = c("Long","Short"))
for (f in 1:nrow(files)){
####### Long strategies #######
t=1
trading_type = trading_type_set$type[t]
longCall_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Callsimple_by_M_",
files$weight[f],".csv"))
copy <- longCall_by_m %>%
mutate(Cluster = 3)
longCall_by_m <- rbind(longCall_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longCall_by_m = longCall_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Call simple"))
longPut_by_m = read_csv(paste0("S03_trading_returns/",trading_type,"Putsimple_by_M_",
files$weight[f],".csv"))
copy <- longPut_by_m %>%
mutate(Cluster = 3)
longPut_by_m <- rbind(longPut_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longPut_by_m = longPut_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," Put simple"))
longStraddle_by_m = read_csv(paste0("S03_trading_returns/simple_",trading_type,"Straddle_by_M_",
files$weight[f],".csv"))
copy <- longStraddle_by_m %>%
mutate(Cluster = 3)
longStraddle_by_m <- rbind(longStraddle_by_m, copy) %>%
mutate(Cluster = ifelse(Cluster==0,"Cluster0",
ifelse(Cluster==1,"Cluster1","Overall")))
longStraddle_by_m = longStraddle_by_m %>%
group_by(steps_ahead,Cluster,Moneyness_t) %>%
summarise(num_traded = n(),
mean_return = mean(R_t)*100,
sharpe_ratio = mean(ER_t)/sqrt(var(ER_t))) %>%
ungroup() %>%
mutate(sharpe_ratio = sharpe_ratio*sqrt(365/steps_ahead), # annualized Sharpe ratio
strategy = paste0(trading_type," straddle"))
## combine all strategies for plotting
dat_by_m = bind_rows(longCall_by_m,longPut_by_m) %>%
bind_rows(longStraddle_by_m) %>%
mutate(logreturn = log(Moneyness_t)) %>%
mutate(simplereturn = exp(logreturn)-1)
# Base plot
by_m_plt_long_3 = ggplot(data = subset(dat_by_m, Cluster %in% c("Overall")), aes(x = simplereturn, y = mean_return, group = Cluster, color = Cluster)) +
facet_wrap(~ strategy, nrow = 1) +
scale_color_manual(values = c("Cluster0" = "blue", "Cluster1" = "red", "Overall" = "black")) +
theme_minimal() +
labs(title = "", x = "Simple return (K-S)/S", y = "Mean Return (%)")
# Adding points only for Cluster0 and Cluster1
by_m_plt_long_3 = by_m_plt_long_3 +
geom_point(data = subset(dat_by_m, Cluster %in% c("Overall")),
alpha = 0.8, size = 1.5, shape = 16)
# Adding smooth lines for Cluster0, Cluster1, and Overall
# by_m_plt_long_3 = by_m_plt_long_3 +
#   geom_smooth(method = "loess", span = 2, se = FALSE, linewidth = 2)
by_m_plt_long_3 = annotate_figure(by_m_plt_long_3,
top = text_grob(paste0("Simple option until maturity returns, tau = ",ttm),
size = 30, face = "bold"))
by_m_plt_long_3
ggsave(filename = paste0(new_dir,trading_type,"simple_by_m_",files$weight[f],".png"), plot = by_m_plt_long_3, bg = "transparent", width = 10, height = 5, dpi = 300)
}
